import{_ as i,c as a,b as n,o as l}from"./app-BrZHaSrv.js";const t={};function h(e,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h3 id="ssh是什么" tabindex="-1"><a class="header-anchor" href="#ssh是什么"><span>ssh是什么</span></a></h3><blockquote><p><strong>SSH 协议本质</strong>：SSH 协议通过加密和身份验证机制，保障数据传输安全、验证通信双方身份，用于远程登录、命令执行、文件传输等操作，是一套抽象的通信规则和格式标准 。</p></blockquote><blockquote><p><strong>不同平台的 SSH 工具</strong>：</p><ul><li><p><strong>Windows：</strong></p><ul><li>PuTTY：经典免费开源客户端，有图形化界面，支持 SSH、Telnet 等多种协议。</li><li>Git Bash：随 Git 安装，提供类 Linux 终端环境，可使用标准 SSH 命令。</li><li>MobaXterm：功能强大，集成多种远程连接协议，兼具图形界面与命令行操作。</li><li>系统自带 OpenSSH：Windows 10 及以上版本自带，可通过 CMD 或 PowerShell 使用<code>ssh</code>命令连接。<strong>CentOS：</strong></li></ul></li><li><p><strong>OpenSSH</strong>：linux内核系统以及windows等系统默认安装，含<code>sshd</code>（服务器守护进程）、<code>ssh</code>（客户端命令）等组件，可执行<code>systemctl status/start/enable sshd</code>管理服务。</p></li><li><p><strong>FileZilla</strong>：主要为 FTP 客户端，也支持 SFTP 协议，方便图形化文件传输。</p></li><li><p><strong>FinalShell</strong>：是独立开发的图形化 SSH 客户端工具，不依赖 OpenSSH，依据 SSH 协议标准开发，可与 CentOS 上的 OpenSSH 服务器通信。</p></li></ul></blockquote><blockquote><p><strong>协议与工具的关系</strong>：</p><p>SSH 协议是抽象规范，规定通信规则；SSH 工具是基于协议开发的具体软件，为用户提供操作界面或命令接口，不同平台的工具只要遵循 SSH 协议标准，就能在各平台间实现会话连接，提升系统互操作性与兼容性 。</p></blockquote><h3 id="ssh工作流程" tabindex="-1"><a class="header-anchor" href="#ssh工作流程"><span>ssh工作流程</span></a></h3><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/download" alt="SSH工作流程"></p><ol><li><strong>连接建立</strong></li></ol><p>SSH服务器在指定的端口侦听客户端的连接请求，在客户端向服务器发起连接请求后，双方建立一个TCP连接。</p><ol start="2"><li><strong>版本协商</strong></li></ol><p>SSH协议目前存在SSH1.X（SSH2.0之前的版本）和SSH2.0版本。SSH2.0协议相比SSH1.X协议来说，在结构上做了扩展，可以支持更多的认证方法和密钥交换方法，同时提高了服务能力。SSH服务器和客户端通过协商确定最终使用的SSH版本号。</p><ol start="3"><li><strong>算法协商</strong></li></ol><p>SSH支持多种加密算法，双方根据各自支持的算法，协商出最终用于产生会话密钥的密钥交换算法、用于数据信息加密的加密算法、用于进行数字签名和认证的公钥算法以及用于数据完整性保护的HMAC算法。</p><ol start="4"><li><strong>密钥交换</strong></li></ol><p>服务器和客户端通过密钥交换算法，动态生成共享的会话密钥和会话ID，建立加密通道。会话密钥主要用于后续数据传输的加密，会话ID用于在认证过程中标识该SSH连接。</p><ol start="5"><li><strong>用户认证</strong></li></ol><p>SSH客户端向服务器端发起认证请求，服务器端对客户端进行认证。SSH支持以下几种认证方式：</p><ul><li>密码（password）认证：客户端通过用户名和密码的方式进行认证，将加密后的用户名和密码发送给服务器，服务器解密后与本地保存的用户名和密码进行对比，并向客户端返回认证成功或失败的消息。</li><li>密钥（publickey）认证：客户端通过用户名，公钥以及公钥算法等信息来与服务器进行认证。</li><li>password-publickey认证：指用户需要同时满足密码认证和密钥认证才能登录。</li><li>all认证：只要满足密码认证和密钥认证其中一种即可。</li></ul><ol start="6"><li><strong>会话请求</strong></li></ol><p>认证通过后，SSH客户端向服务器端发送会话请求，请求服务器提供某种类型的服务，即请求与服务器建立相应的会话。</p><h3 id="ssh其他概念" tabindex="-1"><a class="header-anchor" href="#ssh其他概念"><span>ssh其他概念</span></a></h3><ol><li><strong>SSH端口号是什么</strong></li></ol><p>当SSH应用于STelnet，SFTP以及SCP时，使用的默认SSH端口都是22。当SSH应用于NETCONF时，可以指定SSH端口是22或者830。SSH端口支持修改，更改后当前所有的连接都会断开，SSH<a href="https://cloud.tencent.com/product/cvm/?from_column=20065&amp;from=20065" target="_blank" rel="noopener noreferrer">服务器</a>开始侦听新的端口。</p><ol start="2"><li><strong>ssh密钥是什么</strong></li></ol><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/249347c95b4191fc9112d2e0ca65ed3b.png" alt="img"></p><h1 id="二、git使用ssh密钥对" tabindex="-1"><a class="header-anchor" href="#二、git使用ssh密钥对"><span>二、git使用ssh密钥对</span></a></h1><h3 id="_1-生成密钥对" tabindex="-1"><a class="header-anchor" href="#_1-生成密钥对"><span>1. 生成密钥对</span></a></h3><ul><li><strong>在任意位置打开git bash</strong></li></ul><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20250424200101798.png" alt="image-20250424200101798"></p><ul><li><strong>生成密钥对</strong></li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用ssh-keygen密钥生成工具，生成默认的ssh密钥管理目录下</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># -t：使用ed25519加密算法</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh-keygen</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ed25519</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your_email@example.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20250424201226211.png" alt="image-20250424201226211"></p><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20250424201444755.png" alt="image-20250424201444755"></p><h3 id="_2-远程仓库添加公钥" tabindex="-1"><a class="header-anchor" href="#_2-远程仓库添加公钥"><span>2. 远程仓库添加公钥</span></a></h3><p><strong>.pub文件中的密码是公钥，复制完添加到远程仓库指定位置即可</strong></p><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20250424204213406.png" alt="image-20250424204213406"></p><h3 id="_3-使用密钥对" tabindex="-1"><a class="header-anchor" href="#_3-使用密钥对"><span>3. 使用密钥对</span></a></h3><blockquote><p><strong>当仅有一个密钥对时</strong>，使用 Git 工具进行远程代码的推送和拉取操作时，系统会默认使用该密钥对。</p><p>然而，<strong>当拥有多个密钥对时</strong>，若不配置 <code>config</code> 文件，每次进行 Git 远程操作都需要手动指定要使用的密钥，操作较为繁琐。</p><p>但是，你可以手动创建 <code>config</code> 文件（该文件默认不存在），在其中为每个密钥设置别名。</p><p>之后，在本地添加远程仓库时，将仓库的别名指定为配置好的别名，这样在后续的 Git 远程操作中，就无需每次都手动指定密钥文件，操作更加便捷高效。</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    HostName</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    IdentityFile</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> C:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\U</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sers</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dministrator</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">d_ed25519</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 接下来的不要粘贴</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 是</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 配置文件中的关键字，用于定义一个主机别名。这里的</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 就是你为要连接的目标主机所取的别名。通过这个别名，你可以在后续使用</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 命令连接主机时，直接使用</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy，而不需要每次都输入完整的主机地址等信息，方便了操作和管理。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">HostName</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> github.com：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">HostName</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 同样是</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 配置关键字，它指定了实际要连接的主机的域名或</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> IP</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 地址。在这行配置中，HostName</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 设置为</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> github.com，表示你要连接的目标主机是</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GitHub</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 的服务器。也就是说，当你使用前面定义的别名</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 进行连接时，SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 客户端会尝试连接到</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> github.com</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 这个地址。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">IdentityFile</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> C:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\U</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sers</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dministrator</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">d_ed25519：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">IdentityFile</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 用于指定</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 连接时使用的身份验证密钥文件的路径。这里的路径</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> C:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\U</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sers</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dministrator</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">d_ed25519</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 表示使用位于</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Windows</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 系统中</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Administrator</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 用户的</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 目录下的</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> id_ed25519</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 文件作为私钥进行身份验证。id_ed25519</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 是基于</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Ed25519</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 算法生成的私钥文件，与之对应的公钥文件（通常为</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> id_ed25519.pub）需要添加到目标主机（这里是</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GitHub）的授权列表中，这样</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 客户端才能通过私钥验证，成功连接到服务器。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 关键字指定了连接到目标主机时使用的用户名。在与</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GitHub</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 服务器进行</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 连接时，用户名固定为</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git，这是</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> GitHub</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 对</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 连接的要求。当你通过</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> SSH</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 协议克隆仓库、推送或拉取代码等操作时，都会使用这个</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 用户名进行身份标识。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用密钥</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 初始化本地仓库</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 关联远程仓库</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git@github.com:HEBUTA219/hebuta219.github.io.git</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用别名拉取代码</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 推送本地master分支到远程仓库main分支（本地默认创建master分支）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> zhxy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> master:main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20250424203727885.png" alt="image-20250424203727885"></p>`,41)]))}const k=i(t,[["render",h]]),r=JSON.parse('{"path":"/article/mpcgjc4b/","title":"SSH概述以及git配置ssh方法","lang":"zh-CN","frontmatter":{"title":"SSH概述以及git配置ssh方法","tags":["佘甲帅"],"createTime":"2025/05/24 08:20:33","permalink":"/article/mpcgjc4b/"},"readingTime":{"minutes":6.37,"words":1912},"git":{"updatedTime":1745503576000,"contributors":[{"name":"佘甲帅","username":"","email":"1004862447@qq.com","commits":2,"avatar":"https://gravatar.com/avatar/0710d1e3ca01b4c7a7ec87fea91fdc29b57fed5aa87d0bed47d6562024fd30c2?d=retro"}]},"filePathRelative":"网络安全/ssh.md","headers":[],"categoryList":[{"id":"a9fbbd","sort":10001,"name":"网络安全"}]}');export{k as comp,r as data};
