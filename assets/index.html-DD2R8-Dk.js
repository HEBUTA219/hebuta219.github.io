import{_ as i,c as a,b as n,o as e}from"./app-BrZHaSrv.js";const l={};function h(t,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p>​ 两种办法：①运行dockerfile文件②在已有的docker容器内添加自己需要的东西</p><p>​</p><p>​ 制作docker镜像分三步：编写dockerfile文件、运行dockerfile文件、将镜像导出供其他服务器使用</p><h3 id="_1、编写dockerfile文件" tabindex="-1"><a class="header-anchor" href="#_1、编写dockerfile文件"><span>1、编写dockerfile文件</span></a></h3><p>​ <strong>三步：①选择基础镜像②从本地添加运行文件③设置运行参数</strong></p><p>​ <strong>注意：①dockerfile文件没有后缀名②从本地添加文件是必须是相对路径</strong></p><blockquote><p><strong>（1）dockerfile后端镜像制作:必须使用相对路径</strong></p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 基础镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">FROM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> openjdk:8-jdk-alpine</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 设定时区</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ENV</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">RUN</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ln</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -snf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/share/zoneinfo/</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$TZ</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/localtime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> echo</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $TZ</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/timezone</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/system/target/system-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/system-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/publicservice/target/publicservice-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/publicservice-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/award/target/award-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/award-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/funding/target/funding-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/funding-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/atmosphere/target/atmosphere-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/atmosphere-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/employment/target/employment-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/employment-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/party/target/party-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/party-1.0.0.jar</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 拷贝jar包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> WisdomAcademy_MicroServices/psychological/target/psychological-1.0.0.jar</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /home/ZHXY/psychological-1.0.0.jar</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用 sh -c 来运行多个命令，并使用 &amp; 将它们放到后台 </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sh</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/system-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-system.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/publicservice-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-publicservice.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/award-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-award.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/funding-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-funding.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/atmosphere-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-atmosphere.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/employment-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-employment.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/party-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-party.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    java -jar /home/ZHXY/psychological-1.0.0.jar --spring.config.location=/home/ZHXY/conf/application-psychological.yml &amp; </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    tail -f /dev/null </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>（2）dockerfile前端镜像制作:必须使用相对路径</strong></p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用 Nginx 1.24.0 作为基础镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">FROM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx:1.24.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 设置 maintainer 信息（可选）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">LABEL</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> maintainer=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1004862447@qq.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果你有自定义的静态文件，可以将它们复制到容器的默认静态文件目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ms_client</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/nginx/ms_client</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 暴露 Nginx 使用的端口</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">EXPOSE</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行 Nginx 服务（默认命令）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-g</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">daemon off;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、运行dockerfile文件" tabindex="-1"><a class="header-anchor" href="#_2、运行dockerfile文件"><span>2、运行dockerfile文件</span></a></h3><p>镜像名称可以随意起</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 路径/dockerfile名</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 镜像名称</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、导出镜像" tabindex="-1"><a class="header-anchor" href="#_3、导出镜像"><span>3、导出镜像</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> images</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 导出镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> save</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 镜像名</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 路径/名称.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="二、项目部署流程" tabindex="-1"><a class="header-anchor" href="#二、项目部署流程"><span>二、项目部署流程</span></a></h1><h3 id="_1、环境准备" tabindex="-1"><a class="header-anchor" href="#_1、环境准备"><span>1、环境准备</span></a></h3><blockquote><p>**（1）环境要求：**安装docker和docker-compose</p></blockquote><blockquote><p><strong>（2）配置docker国内镜像源（可选）：</strong></p><p>如果设备不能联网则无需配置</p><p>运行命令：<code>vim /etc/docker/daemon.json</code>用来修改docker配置文件</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">registry-mirrors</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.registry.cyou</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker-cf.registry.cyou</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://dockercf.jsdelivr.fyi</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.jsdelivr.fyi</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://dockertest.jsdelivr.fyi</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://mirror.aliyuncs.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://dockerproxy.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://mirror.baidubce.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.m.daocloud.io</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.nju.edu.cn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.mirrors.sjtug.sjtu.edu.cn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.mirrors.ustc.edu.cn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://mirror.iscas.ac.cn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://docker.rainbond.cc</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启docker：<code>sudo systemctl restart docker</code></p></blockquote><p>​ <strong>部署流程</strong>：①部署非系统模块docker②部署系统前后端docker③关闭防火墙</p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20241129142050748.png" alt="image-20241129142050748" style="zoom:50%;"><h3 id="_2、部署非系统模块docker" tabindex="-1"><a class="header-anchor" href="#_2、部署非系统模块docker"><span>2、部署非系统模块docker</span></a></h3><blockquote><ol><li><strong>上传所有文件（可选）</strong></li></ol><p>若电脑没有联网则需上传<code>minio.tar、mysql.tar、nacos.tar、rabbitmq.tar、redis.tar</code></p><ol start="2"><li><strong>docker载入镜像包（可选）</strong></li></ol><p>若电脑没有联网需要对镜像包<code>minio.tar、mysql.tar、nacos.tar、rabbitmq.tar、redis.tar</code>执行此步骤，</p><p><code>docker load -i /docker镜像包路径/镜像包名</code></p><ol start="3"><li><strong>修改docker-compose-1.yml脚本（可选）</strong></li></ol><p>如果存在某个docker版本不一致可以修改此脚本进行获取</p><ol start="4"><li><strong>运行docker-compose-1.yml脚本</strong></li></ol><p><code>docker-compose -f docker-compose-1.yml up -d</code></p><ol start="5"><li><strong>配置rabbitmq</strong></li></ol><p>（1）进入rabbitmq容器启动web配置界面</p><p>​ 进入docker容器内部：<code>docker exec -it zhxy_rabbitmq /bin/bash</code></p><p>​ 启动ui管理后台程序以供访问：<code>rabbitmq-plugins enable rabbitmq_management</code></p><p>​ 退出docker容器内部：<code>exit</code></p><p>​ 浏览器访问rabbitmq管理界面地址：<code>ip:15672</code></p><p>（2）配置rabbitmq</p><p>​ 进入rabbitmq ui界面：<code>ip:15672</code></p><p>​ 登录：账号密码见配置文件<code>docker-compose-1.yml</code></p><p>​ 创建虚拟机zhxy：进入<code>Admin</code>菜单栏下的<code>Virtual Hosts</code>，点击<code>Add a new virtual host</code>，<code>name</code>设置为zhxy，点击<code>add</code></p><p>​ 在虚拟机zhxy下创建队列：进入<code>Queues and Streams</code>菜单栏下，点击<code>Add a new queue</code>，<code>Virtual host</code>选择zhxy，<code>name</code>设置为zhxysystem-userBehavior，点击<code>add</code></p><ol start="6"><li><p><strong>配置minio</strong></p><p>进入minio ui界面：<code>ip:9000</code></p><p>登录：账号密码见配置文件<code>docker-compose-1.yml</code></p><p>创建桶：进入<code>Buckets</code>菜单栏，点击<code>Create Bucket</code>，<code>Bucket Name</code>设置为freshmen-system</p><p>生成秘钥：进入<code>Access Keys</code>，点击<code>Access Key</code>，保存访问令牌和秘钥</p></li></ol></blockquote><p>注：一切组件账号密码以及端口地址可见docker-compose-1.yml文件</p><h3 id="_3、部署前后端docker" tabindex="-1"><a class="header-anchor" href="#_3、部署前后端docker"><span>3、部署前后端docker</span></a></h3><blockquote><ol><li><strong>修改/server/conf目录下后端配置文件</strong></li></ol><p>（1）修改所有.yml文件中的<code>ip_address</code>为服务器ip</p><p>（2）修改minio访问令牌和秘钥：需要修改<code>application-publicservice.yml</code>和<code>application-system.yml</code>文件中minio配置部分的<code>accessKey</code>以及<code>secretKey</code>为自己新生成的访问令牌和秘钥</p><ol start="2"><li><strong>载入前后端docker镜像包</strong></li></ol><p><code>docker load -i /路径/zhxy_server.tar</code></p><p><code>docker load -i /路径/zhxy_client.tar</code></p><ol start="3"><li><strong>运行docker-compose-2.yml脚本</strong></li></ol><p><code>docker-compose -f docker-compose-2.yml up -d</code></p><ol start="4"><li><strong>启动成功</strong></li></ol></blockquote><h3 id="_4、关闭防火墙" tabindex="-1"><a class="header-anchor" href="#_4、关闭防火墙"><span>4、关闭防火墙</span></a></h3><p>启动docker之后关闭防火墙（启动docker需要用到uptables相关信息，所以启动之后可以关闭防火墙避免服务访问失败）</p><p><code>systemctl stop firewalld</code></p><h3 id="_5、访问门户网站" tabindex="-1"><a class="header-anchor" href="#_5、访问门户网站"><span>5、访问门户网站</span></a></h3><p>访问地址：<code>ip:8064</code></p><h1 id="三、数据初始化流程" tabindex="-1"><a class="header-anchor" href="#三、数据初始化流程"><span>三、数据初始化流程</span></a></h1><h3 id="_1、数据库初始化" tabindex="-1"><a class="header-anchor" href="#_1、数据库初始化"><span>1、数据库初始化</span></a></h3><p>​ 登录navicat连接mysql，运行sql文件夹下的所有脚本（由于脚本太多运行前可以先合并文件<code>type *.sql &gt;&gt; ..\\aaa.sql</code>）</p><h3 id="_2、图标导入" tabindex="-1"><a class="header-anchor" href="#_2、图标导入"><span>2、图标导入</span></a></h3><p>​ 将<code>D:\\reponsitory\\collegeManageSystem\\docker_deploy\\assets\\活动图标</code>目录下的文件夹init上传到minio的freshmen-system桶的根目录下</p><h3 id="_3、系统信息初始化" tabindex="-1"><a class="header-anchor" href="#_3、系统信息初始化"><span>3、系统信息初始化</span></a></h3><p>访问系统后台管理界面：<code>ip:8061</code></p><p>登录：账号密码root/root</p><p>进入系统管理菜单修改单位信息</p><img src="https://raw.githubusercontent.com/she1110/typora-/master/image-20241222231709354.png" alt="image-20241222231709354" style="zoom:25%;"><h3 id="_4、基础数据导入" tabindex="-1"><a class="header-anchor" href="#_4、基础数据导入"><span>4、基础数据导入</span></a></h3><p>​ 基础数据包括教师信息、学生信息、辅导员带班情况、部门信息、用户信息、用户角色信息</p>`,43)]))}const k=i(l,[["render",h]]),d=JSON.parse('{"path":"/docs/qda4meje/","title":"项目打包流程与部署说明V1","lang":"zh-CN","frontmatter":{"title":"项目打包流程与部署说明V1","createTime":"2025/05/24 08:20:33","permalink":"/docs/qda4meje/"},"readingTime":{"minutes":4.63,"words":1389},"git":{"updatedTime":1745458372000,"contributors":[{"name":"Lang","username":"Lang","email":"914551901@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Lang?v=4","url":"https://github.com/Lang"}]},"filePathRelative":"notes/docs/1.安装部署/1.项目打包流程与部署说明V1.md","headers":[]}');export{k as comp,d as data};
